root = true
# Schema: http://EditorConfig.org
# Docs: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

# top-most EditorConfig file

[*]
indent_style = space
trim_trailing_whitespace = true
charset = utf-8
insert_final_newline = true
max_line_length = 250

# Microsoft .NET properties
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_methods = true:suggestion

# ReSharper properties
resharper_keep_existing_declaration_block_arrangement = true
resharper_keep_existing_embedded_block_arrangement = true
resharper_keep_existing_enum_arrangement = true
resharper_blank_lines_around_single_line_auto_property = 1
resharper_blank_lines_around_single_line_property = 1
resharper_braces_for_for = required
resharper_braces_for_foreach = required
resharper_braces_for_ifelse = required
resharper_braces_for_while = required
resharper_braces_redundant = false
resharper_csharp_blank_lines_around_single_line_invocable = 1
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_max_line_length = 200
resharper_csharp_wrap_after_declaration_lpar = true
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_keep_existing_initializer_arrangement = false
resharper_max_array_initializer_elements_on_line = 10
resharper_max_attribute_length_for_same_line = 200
resharper_max_initializer_elements_on_line = 1
resharper_max_invocation_arguments_on_line = 5
resharper_object_creation_when_type_not_evident = target_typed
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_accessor_attribute_on_same_line = false
resharper_wrap_array_initializer_style = chop_if_long

# ReSharper inspection severities
resharper_arrange_local_function_body_highlighting = suggestion
resharper_arrange_method_or_operator_body_highlighting = suggestion
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_class_never_instantiated_global_highlighting = none
resharper_convert_to_constant_global_highlighting = none
resharper_convert_to_constant_local_highlighting = none
resharper_enforce_do_while_statement_braces_highlighting = warning
resharper_enforce_fixed_statement_braces_highlighting = warning
resharper_enforce_foreach_statement_braces_highlighting = warning
resharper_enforce_for_statement_braces_highlighting = warning
resharper_enforce_if_statement_braces_highlighting = warning
resharper_enforce_lock_statement_braces_highlighting = warning
resharper_enforce_using_statement_braces_highlighting = warning
resharper_enforce_while_statement_braces_highlighting = warning
resharper_introduce_optional_parameters_global_highlighting = none
resharper_razor_assembly_not_resolved_highlighting = warning
resharper_redundant_base_qualifier_highlighting = warning
resharper_suggest_var_or_type_built_in_types_highlighting = hint
resharper_suggest_var_or_type_elsewhere_highlighting = hint
resharper_suggest_var_or_type_simple_types_highlighting = hint
resharper_unnecessary_whitespace_highlighting = warning
resharper_unused_parameter_global_highlighting = warning
resharper_use_collection_expression_highlighting = warning
resharper_use_configure_await_false_for_async_disposable_highlighting = suggestion
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct,xml,stylecop}]
indent_size = 2

# JSON files
[*.{json,json5}]
indent_size = 2

# YAML Files
[*.{yml,yaml}]
indent_size = 2

# Shell scripts
[{*.bash,*.sh,*.zsh}]
end_of_line = lf

[*.{cmd,bat}]
end_of_line = crlf

# Web Files
[*.{htm,html,js,ts,css,scss,less}]
indent_size = 2


#### .NET Coding Conventions ####
[*.{cs,csx,cake,vb}]

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true

# Avoid "this." and "Me." if not necessary #IDE0003 and IDE0009
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# Use language keywords instead of framework type names for type references (IDE0049)
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences (IDE0047 and IDE0048)
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning #Add accessibility modifiers (IDE0040)

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion #Null check can be simplified (IDE0029, IDE0030, IDE0270)
dotnet_style_collection_initializer = true:suggestion #Use collection initializers (IDE0028)
dotnet_style_prefer_collection_expression = when_types_loosely_match:suggestion #Use collection initializers (IDE0028) and Use collection expression for array (IDE0300)
dotnet_style_explicit_tuple_names = true:suggestion #Use explicitly provided tuple name (IDE0033)
dotnet_style_null_propagation = true:suggestion #Use null propagation (IDE0031)
dotnet_style_object_initializer = true:suggestion #Use object initializers (IDE0017)
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:suggestion #Use auto-implemented property (IDE0032)
dotnet_style_prefer_compound_assignment = true:suggestion #Use compound assignment (IDE0054 and IDE0074)
dotnet_style_prefer_conditional_expression_over_assignment = true:silent #Use conditional expression for assignment (IDE0045)
dotnet_style_prefer_conditional_expression_over_return = true:silent #Use conditional expression for return (IDE0046)
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion #Use inferred member names (IDE0037)
dotnet_style_prefer_inferred_tuple_names = true:suggestion #Use inferred member names (IDE0037)
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning #Use 'is null' check (IDE0041)
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion #Simplify conditional expression (IDE0075)
dotnet_style_prefer_simplified_interpolation = true:suggestion #Simplify interpolation (IDE0071)
dotnet_style_namespace_match_folder = true #Namespace does not match folder structure (IDE0130)

# Field preferences
dotnet_style_readonly_field = true:warning #Add readonly modifier (IDE0044)

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion #Remove unused parameter (IDE0060)

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none #Remove unnecessary suppression (IDE0079)

#### C# Coding Conventions ####
[*.cs]
# Prefer "var" everywhere (Implicit and explicit types) #IDE0007 and IDE0008
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:warning

# Expression-Bodied members
csharp_style_expression_bodied_accessors = true:silent #IDE0027
csharp_style_expression_bodied_constructors = false:silent #IDE0021
csharp_style_expression_bodied_indexers = true:silent #IDE0026
csharp_style_expression_bodied_lambdas = true:silent #IDE0053
csharp_style_expression_bodied_local_functions = true:silent #IDE0061
csharp_style_expression_bodied_methods = true:silent #IDE0022
csharp_style_expression_bodied_operators = true:silent #IDE0023 IDE0024
csharp_style_expression_bodied_properties = true:silent #IDE0025

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion #Use pattern matching to avoid 'as' followed by a 'null' check (IDE0019)
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion #Use pattern matching to avoid 'is' check followed by a cast (IDE0020 and IDE0038)
csharp_style_prefer_extended_property_pattern = true:suggestion #Simplify property pattern (IDE0170)
csharp_style_prefer_not_pattern = true:suggestion #Use pattern matching (not operator) (IDE0083)
csharp_style_prefer_pattern_matching = true:silent #Use pattern matching (IDE0078 and IDE0260)
csharp_style_prefer_switch_expression = true:suggestion #Use switch expression (IDE0066)

# Null-checking preferences
csharp_style_conditional_delegate_call = true:warning #Use conditional delegate call (IDE1005)

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion #Make local function static (IDE0062)
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:suggestion #IDE0036

# Code-block preferences
csharp_prefer_braces = true:silent #IDE0011
csharp_prefer_simple_using_statement = true:suggestion #IDE0063
csharp_style_prefer_method_group_conversion = true:suggestion #IDE0200: Remove unnecessary lambda expression
csharp_style_prefer_primary_constructors = true:suggestion #IDE0290: Use primary constructor

# Expression-level preferences
csharp_prefer_simple_default_expression = true:warning #Simplify 'default' expression (IDE0034)
csharp_style_deconstructed_variable_declaration = true:warning #Deconstruct variable declaration (IDE0042)
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion #Simplify new expression (IDE0090)
csharp_style_inlined_variable_declaration = true:suggestion #Inline variable declaration (IDE0018)
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:suggestion #Use index operator (IDE0056)
csharp_style_prefer_range_operator = true:suggestion #Use range operator (IDE0057)
csharp_style_prefer_tuple_swap = true:suggestion #Use tuple to swap values (IDE0180)
csharp_style_throw_expression = true:suggestion #Use throw expression (IDE0016)
csharp_style_unused_value_assignment_preference = discard_variable:suggestion #Remove unnecessary value assignment (IDE0059)
csharp_style_unused_value_expression_statement_preference = discard_variable:silent #Remove unnecessary expression value (IDE0058)
csharp_style_prefer_local_over_anonymous_function = true #Use local function instead of lambda (IDE0039)
csharp_style_prefer_null_check_over_type_check = true #Prefer 'null' check over type check (IDE0150)

# 'using' directive preferences
csharp_using_directive_placement = inside_namespace:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

## Naming conventions
[*.{cs,vb}]

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style
dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static
dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style
dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are Pascal case
dotnet_naming_rule.public_static_fields_should_be_camel_case.severity = suggestion
dotnet_naming_rule.public_static_fields_should_be_camel_case.symbols = public_static_fields
dotnet_naming_rule.public_static_fields_should_be_camel_case.style = public_static_field_style
dotnet_naming_symbols.public_static_fields.required_modifiers = static
dotnet_naming_symbols.public_static_fields.applicable_kinds = field
dotnet_naming_style.public_static_field_style.capitalization = pascal_case

# Instance fields are camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local
dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_style.local_function_style.capitalization = pascal_case

# Type Parameters
dotnet_naming_style.type_parameter_style.capitalization = pascal_case
dotnet_naming_style.type_parameter_style.required_prefix = T

dotnet_naming_rule.type_parameter_naming.symbols = type_parameter_symbol
dotnet_naming_rule.type_parameter_naming.style = type_parameter_style
dotnet_naming_rule.type_parameter_naming.severity = warning
dotnet_naming_symbols.type_parameter_symbol.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter_symbol.applicable_accessibilities = *

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

#### Analyzers ####
dotnet_diagnostic.ide0001.severity = suggestion # Simplify name
dotnet_diagnostic.ide0002.severity = suggestion # Simplify member access
dotnet_diagnostic.ide0004.severity = suggestion # Remove unnecessary cast
dotnet_diagnostic.ide0005.severity = suggestion # Remove unnecessary using directives
dotnet_diagnostic.ide0010.severity = warning # Add missing cases to switch statement
dotnet_diagnostic.ide0035.severity = warning # Remove unreachable code
dotnet_diagnostic.ide0051.severity = warning # Remove unused private member
dotnet_diagnostic.ide0052.severity = warning # Remove unread private member
dotnet_diagnostic.ide0059.severity = warning # Remove unnecessary value assignment
dotnet_diagnostic.ide0064.severity = warning # Make struct fields writable
dotnet_diagnostic.ide0070.severity = warning # Use 'System.HashCode.Combine'
dotnet_diagnostic.ide0072.severity = warning # Add missing cases to switch expression
dotnet_diagnostic.ide0080.severity = warning # Remove unnecessary suppression operator
dotnet_diagnostic.ide0082.severity = warning # Convert typeof to nameof
dotnet_diagnostic.ide0100.severity = warning # Remove unnecessary equality operator
dotnet_diagnostic.ide0120.severity = warning # Simplify LINQ expression
dotnet_diagnostic.ide0240.severity = warning # Nullable directive is redundant
dotnet_diagnostic.ide0241.severity = warning # Nullable directive is unnecessary
dotnet_diagnostic.ide0280.severity = warning # Use 'nameof'
dotnet_diagnostic.ide1006.severity = suggestion


#Code quality rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/
dotnet_code_quality.copy_analysis = true

#Design rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/design-warnings
dotnet_diagnostic.ca1000.severity = warning #Do not declare static members on generic types
dotnet_diagnostic.ca1001.severity = warning #Types that own disposable fields should be disposable
dotnet_diagnostic.ca1018.severity = warning #Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.ca1019.severity = warning #Define accessors for attribute arguments
dotnet_diagnostic.ca1036.severity = warning #Override methods on comparable types
dotnet_diagnostic.ca1066.severity = warning #Implement IEquatable when overriding Equals
dotnet_diagnostic.ca1067.severity = warning #Override Object.Equals(object) when implementing IComparable
dotnet_diagnostic.ca1068.severity = warning #CancellationToken parameters must come last

#Globalization rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/globalization-warnings
dotnet_diagnostic.ca1303.severity = none #Do not pass literals as localized parameters
dotnet_diagnostic.ca1304.severity = warning #Specify CultureInfo
dotnet_diagnostic.ca1305.severity = warning #Specify IFormatProvider
dotnet_diagnostic.ca1307.severity = warning #Specify StringComparison for clarity
dotnet_diagnostic.ca1308.severity = warning #Normalize strings to uppercase
dotnet_diagnostic.ca1309.severity = warning #Use ordinal StringComparison
dotnet_diagnostic.ca1310.severity = warning #Specify StringComparison for correctness
dotnet_diagnostic.ca2101.severity = warning #Specify marshalling for P/Invoke string arguments

#Portability and interoperability rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/interoperability-warnings
dotnet_diagnostic.ca1401.severity = warning #P/Invokes should not be visible
dotnet_diagnostic.ca1416.severity = warning #Validate platform compatibility
dotnet_diagnostic.ca1417.severity = warning #Do not use OutAttribute on string parameters for P/Invokes

#Maintainability rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/maintainability-warnings
dotnet_diagnostic.ca1508.severity = none

#Naming rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/naming-warnings
dotnet_diagnostic.ca1708.severity = warning #Identifiers should differ by more than case
dotnet_diagnostic.ca1710.severity = none #Identifiers should have correct suffix
dotnet_diagnostic.ca1711.severity = none #Identifiers should not have incorrect suffix
dotnet_diagnostic.ca1716.severity = suggestion #Identifiers should not match keywords
dotnet_diagnostic.ca1724.severity = warning #Type names should not match namespaces

#Performance rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/performance-warnings
dotnet_diagnostic.ca1805.severity = warning #Do not initialize unnecessarily
dotnet_diagnostic.ca1806.severity = warning #Do not ignore method results
dotnet_diagnostic.ca1813.severity = warning #Avoid unsealed attributes
dotnet_diagnostic.ca1821.severity = warning #Remove empty finalizers
dotnet_diagnostic.ca1825.severity = warning #Avoid zero-length array allocations
dotnet_diagnostic.ca1826.severity = warning #Use property instead of Linq Enumerable method
dotnet_diagnostic.ca1827.severity = warning #Do not use Count()/LongCount() when Any() can be used
dotnet_diagnostic.ca1828.severity = warning #Do not use CountAsync/LongCountAsync when AnyAsync can be used
dotnet_diagnostic.ca1829.severity = warning #Use Length/Count property instead of Enumerable.Count method
dotnet_diagnostic.ca1830.severity = warning #Prefer strongly-typed Append and Insert method overloads on StringBuilder
dotnet_diagnostic.ca1831.severity = warning #Use AsSpan instead of Range-based indexers for string when appropriate
dotnet_diagnostic.ca1832.severity = warning #Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array
dotnet_diagnostic.ca1833.severity = warning #Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array
dotnet_diagnostic.ca1834.severity = warning #Use StringBuilder.Append(char) for single character strings
dotnet_diagnostic.ca1835.severity = warning #Prefer the memory-based overloads of ReadAsync/WriteAsync methods in stream-based classes
dotnet_diagnostic.ca1836.severity = warning #Prefer IsEmpty over Count when available
dotnet_diagnostic.ca1837.severity = warning #Use Environment.ProcessId instead of Process.GetCurrentProcess().Id
dotnet_diagnostic.ca1838.severity = warning #Avoid StringBuilder parameters for P/Invokes
dotnet_diagnostic.ca1839.severity = warning #Use Environment.ProcessPath instead of Process.GetCurrentProcess().MainModule.FileName
dotnet_diagnostic.ca1840.severity = warning #Use Environment.CurrentManagedThreadId instead of Thread.CurrentThread.ManagedThreadId
dotnet_diagnostic.ca1841.severity = warning #Prefer Dictionary Contains methods
dotnet_diagnostic.ca1842.severity = warning #Do not use 'WhenAll' with a single task
dotnet_diagnostic.ca1843.severity = warning #Do not use 'WaitAll' with a single task
dotnet_diagnostic.ca1845.severity = warning #Use span-based 'string.Concat'
dotnet_diagnostic.ca1846.severity = warning #Prefer AsSpan over Substring
dotnet_diagnostic.ca1847.severity = warning #Use String.Contains(char) instead of String.Contains(string) with single characters
dotnet_diagnostic.ca1848.severity = warning #Use the LoggerMessage delegates
dotnet_diagnostic.ca1850.severity = warning #Prefer static HashData method over ComputeHash
dotnet_diagnostic.ca1851.severity = warning #Possible multiple enumerations of IEnumerable collection
dotnet_diagnostic.ca1852.severity = warning #Seal internal types
dotnet_diagnostic.ca1853.severity = warning #Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.ca1854.severity = warning #Prefer the IDictionary.TryGetValue(TKey, out TValue) method
dotnet_diagnostic.ca1855.severity = warning #Use Span<T>.Clear() instead of Span<T>.Fill()
dotnet_diagnostic.ca1856.severity = warning #Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.ca1857.severity = warning #The parameter expects a constant for optimal performance
dotnet_diagnostic.ca1858.severity = warning #Use StartsWith instead of IndexOf
dotnet_diagnostic.ca1859.severity = warning #Use concrete types when possible for improved performance
dotnet_diagnostic.ca1860.severity = warning #Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.ca1861.severity = warning #Avoid constant arrays as arguments
dotnet_diagnostic.ca1862.severity = warning #Use the 'StringComparison' method overloads to perform case-insensitive string comparisons
dotnet_diagnostic.ca1863.severity = warning #Use 'CompositeFormat'
dotnet_diagnostic.ca1864.severity = warning #Prefer the 'IDictionary.TryAdd(TKey, TValue)' method
dotnet_diagnostic.ca1865.severity = warning #Use 'string.Method(char)' instead of 'string.Method(string)' for string with single char
dotnet_diagnostic.ca1866.severity = warning #Use 'string.Method(char)' instead of 'string.Method(string)' for string with single char
dotnet_diagnostic.ca1867.severity = warning #Use 'string.Method(char)' instead of 'string.Method(string)' for string with single char
dotnet_diagnostic.ca1868.severity = warning #Unnecessary call to 'Contains' for sets
dotnet_diagnostic.ca1869.severity = warning #Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.ca1870.severity = warning #Use a cached 'SearchValues' instance
dotnet_diagnostic.ca1871.severity = warning #Do not pass a nullable struct to 'ArgumentNullException.ThrowIfNull'
dotnet_diagnostic.ca1872.severity = warning #Prefer 'Convert.ToHexString' and 'Convert.ToHexStringLower' over call chains based on 'BitConverter.ToString'

#Reliability rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/reliability-warnings
dotnet_diagnostic.ca2002.severity = warning #Do not lock on objects with weak identity
dotnet_diagnostic.ca2009.severity = warning #Do not call ToImmutableCollection on an ImmutableCollection value
dotnet_diagnostic.ca2011.severity = warning #Do not assign property within its setter
dotnet_diagnostic.ca2012.severity = warning #Use ValueTasks correctly
dotnet_diagnostic.ca2013.severity = warning #Do not use ReferenceEquals with value types
dotnet_diagnostic.ca2014.severity = warning #Do not use stackalloc in loops
dotnet_diagnostic.ca2015.severity = warning #Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.ca2016.severity = warning #Forward the CancellationToken parameter to methods that take one
dotnet_diagnostic.ca2017.severity = warning #Parameter count mismatch
dotnet_diagnostic.ca2021.severity = warning #Don't call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types

#Security rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/security-warnings
dotnet_diagnostic.ca2119.severity = warning #Seal methods that satisfy private interfaces
dotnet_diagnostic.ca2300.severity = warning #Do not use insecure deserializer BinaryFormatter
dotnet_diagnostic.ca2301.severity = warning #Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
dotnet_diagnostic.ca2302.severity = warning #Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
dotnet_diagnostic.ca2305.severity = warning #Do not use insecure deserializer LosFormatter
dotnet_diagnostic.ca2310.severity = warning #Do not use insecure deserializer NetDataContractSerializer
dotnet_diagnostic.ca2311.severity = warning #Do not deserialize without first setting NetDataContractSerializer.Binder
dotnet_diagnostic.ca2312.severity = warning #Ensure NetDataContractSerializer.Binder is set before deserializing
dotnet_diagnostic.ca2315.severity = warning #Do not use insecure deserializer ObjectStateFormatter
dotnet_diagnostic.ca2321.severity = warning #Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
dotnet_diagnostic.ca2322.severity = warning #Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
dotnet_diagnostic.ca2326.severity = warning #Do not use TypeNameHandling values other than None
dotnet_diagnostic.ca2327.severity = warning #Do not use insecure JsonSerializerSettings
dotnet_diagnostic.ca2328.severity = warning #Ensure that JsonSerializerSettings are secure
dotnet_diagnostic.ca2329.severity = warning #Do not deserialize with JsonSerializer using an insecure configuration
dotnet_diagnostic.ca2330.severity = warning #Ensure that JsonSerializer has a secure configuration when deserializing
dotnet_diagnostic.ca2350.severity = warning #Ensure DataTable.ReadXml()'s input is trusted
dotnet_diagnostic.ca2351.severity = warning #Ensure DataSet.ReadXml()'s input is trusted
dotnet_diagnostic.ca2352.severity = warning #Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.ca2353.severity = warning #Unsafe DataSet or DataTable in serializable type
dotnet_diagnostic.ca2354.severity = warning #Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attack
dotnet_diagnostic.ca2355.severity = warning #Unsafe DataSet or DataTable in deserialized object graph
dotnet_diagnostic.ca2356.severity = warning #Unsafe DataSet or DataTable type in web deserialized object graph
dotnet_diagnostic.ca2361.severity = warning #Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data
dotnet_diagnostic.ca2362.severity = warning #Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.ca3075.severity = warning #Insecure DTD Processing
dotnet_diagnostic.ca3076.severity = warning #Insecure XSLT Script Execution
dotnet_diagnostic.ca5350.severity = warning #Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.ca5351.severity = warning #Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.ca5358.severity = warning #Do Not Use Unsafe Cipher Modes
dotnet_diagnostic.ca5359.severity = warning #Do not disable certificate validation
dotnet_diagnostic.ca5360.severity = warning #Do not call dangerous methods in deserialization
dotnet_diagnostic.ca5361.severity = warning #Do not disable SChannel use of strong crypto
dotnet_diagnostic.ca5362.severity = warning #Potential reference cycle in deserialized object graph
dotnet_diagnostic.ca5363.severity = warning #Do not disable request validation
dotnet_diagnostic.ca5364.severity = warning #Do not use deprecated security protocols
dotnet_diagnostic.ca5365.severity = warning #Do Not Disable HTTP Header Checking
dotnet_diagnostic.ca5366.severity = warning #Use XmlReader For DataSet Read XML
dotnet_diagnostic.ca5367.severity = warning #Do not serialize types with pointer fields
dotnet_diagnostic.ca5368.severity = warning #Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.ca5369.severity = warning #Use XmlReader for Deserialize
dotnet_diagnostic.ca5370.severity = warning #Use XmlReader for validating reader
dotnet_diagnostic.ca5371.severity = warning #Use XmlReader for schema read
dotnet_diagnostic.ca5372.severity = warning #Use XmlReader for XPathDocument
dotnet_diagnostic.ca5373.severity = warning #Do not use obsolete key derivation function
dotnet_diagnostic.ca5374.severity = warning #Do not use XslTransform
dotnet_diagnostic.ca5375.severity = warning #Do not use account shared access signature
dotnet_diagnostic.ca5376.severity = warning #Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.ca5377.severity = warning #Use container level access policy
dotnet_diagnostic.ca5378.severity = warning #Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.ca5379.severity = warning #Ensure key derivation function algorithm is sufficiently strong
dotnet_diagnostic.ca5380.severity = warning #Do not add certificates to root store
dotnet_diagnostic.ca5381.severity = warning #Ensure certificates are not added to root store
dotnet_diagnostic.ca5382.severity = warning #Use secure cookies in ASP.NET Core
dotnet_diagnostic.ca5383.severity = warning #Ensure use secure cookies in ASP.NET Core
dotnet_diagnostic.ca5384.severity = warning #Do not use digital signature algorithm (DSA)
dotnet_diagnostic.ca5385.severity = warning #Use Rivest–Shamir–Adleman (RSA) algorithm with sufficient key size
dotnet_diagnostic.ca5386.severity = warning #Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.ca5387.severity = warning #Do not use weak key derivation function with insufficient iteration count
dotnet_diagnostic.ca5388.severity = warning #Ensure sufficient iteration count when using weak key derivation function
dotnet_diagnostic.ca5389.severity = warning #Do not add archive item's path to the target file system path
dotnet_diagnostic.ca5390.severity = warning #Do not hard-code encryption key
dotnet_diagnostic.ca5394.severity = none #Do not use insecure randomness
dotnet_diagnostic.ca5397.severity = warning #Do not use deprecated SslProtocols values
dotnet_diagnostic.ca5398.severity = warning #Avoid hardcoded SslProtocols values
dotnet_diagnostic.ca5399.severity = warning #Enable HttpClient certificate revocation list check
dotnet_diagnostic.ca5400.severity = warning #Ensure HttpClient certificate revocation list check is not disabled
dotnet_diagnostic.ca5401.severity = warning #Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.ca5402.severity = warning #Use CreateEncryptor with the default IV
dotnet_diagnostic.ca5403.severity = warning #Do not hard-code certificate
dotnet_diagnostic.ca5404.severity = warning #Do not disable token validation checks
dotnet_diagnostic.ca5405.severity = warning #Do not always skip token validation in delegates

#Usage rules: https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/usage-warnings
dotnet_diagnostic.ca2200.severity = warning #Rethrow to preserve stack details
dotnet_diagnostic.ca2201.severity = warning #Do not raise reserved exception types
dotnet_diagnostic.ca2208.severity = warning #Instantiate argument exceptions correctly
dotnet_diagnostic.ca2215.severity = warning #Dispose methods should call base class dispose
dotnet_diagnostic.ca2218.severity = warning #Override GetHashCode on overriding Equals
dotnet_diagnostic.ca2219.severity = warning #Do not raise exceptions in exception clauses
dotnet_diagnostic.ca2226.severity = warning #Operators should have symmetrical overloads
dotnet_diagnostic.ca2242.severity = warning #Test for NaN correctly
dotnet_diagnostic.ca2243.severity = warning #Attribute string literals should parse correctly
dotnet_diagnostic.ca2244.severity = warning #Do not duplicate indexed element initializations
dotnet_diagnostic.ca2245.severity = warning #Do not assign a property to itself
dotnet_diagnostic.ca2246.severity = warning #Do not assign a symbol and its member in the same statement
dotnet_diagnostic.ca2247.severity = warning #Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum
dotnet_diagnostic.ca2248.severity = warning #Provide correct enum argument to Enum.HasFlag
dotnet_diagnostic.ca2249.severity = warning #Consider using String.Contains instead of String.IndexOf
dotnet_diagnostic.ca2250.severity = warning #Use ThrowIfCancellationRequested
dotnet_diagnostic.ca2254.severity = warning #Template should be a static expression
dotnet_diagnostic.ca2263.severity = warning #Prefer generic overload when type is known


dotnet_diagnostic.ma0001.severity = warning # MA0001: StringComparison is missing
dotnet_diagnostic.ma0002.severity = warning # MA0002: IEqualityComparer<string> or IComparer<string> is missing
dotnet_diagnostic.ma0003.severity = suggestion # MA0003: Name parameter
dotnet_diagnostic.ma0004.severity = warning # MA0004: Use .ConfigureAwait(false)
dotnet_diagnostic.ma0005.severity = warning # MA0005: Use Array.Empty<T>()
dotnet_diagnostic.ma0006.severity = none # MA0006: use String.Equals
dotnet_diagnostic.ma0007.severity = suggestion # MA0007: Add comma after the last property
dotnet_diagnostic.ma0008.severity = warning # MA0008: Add StructLayoutAttribute
dotnet_diagnostic.ma0009.severity = warning # MA0009: Add timeout parameter
dotnet_diagnostic.ma0010.severity = warning # MA0010: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.ma0011.severity = warning # MA0011: IFormatProvider is missing
dotnet_diagnostic.ma0012.severity = warning # MA0012: Do not raise reserved exception type
dotnet_diagnostic.ma0013.severity = warning # MA0013: Types should not extend System.ApplicationException
dotnet_diagnostic.ma0014.severity = warning # MA0014: Do not raise System.ApplicationException type
dotnet_diagnostic.ma0015.severity = warning # MA0015: Specify the parameter name
dotnet_diagnostic.ma0016.severity = warning # MA0016: Prefer return collection abstraction instead of implementation
dotnet_diagnostic.ma0017.severity = warning # MA0017: Abstract types should not have public or internal constructors
dotnet_diagnostic.ma0019.severity = warning # MA0019: Use EventArgs.Empty
dotnet_diagnostic.ma0020.severity = suggestion # MA0020: Use direct methods instead of extension methods
dotnet_diagnostic.ma0021.severity = warning # MA0021: Use StringComparer.GetHashCode
dotnet_diagnostic.ma0022.severity = warning # MA0022: Return Task.FromResult instead of returning null
dotnet_diagnostic.ma0023.severity = warning # MA0023: Add RegexOptions.ExplicitCapture
dotnet_diagnostic.ma0024.severity = warning # MA0024: Use StringComparer.Ordinal
dotnet_diagnostic.ma0025.severity = warning # MA0025: TODO Implement the functionality
dotnet_diagnostic.ma0026.severity = warning # MA0026: Fix TODO comment
dotnet_diagnostic.ma0027.severity = warning # MA0027: Do not remove original exception
dotnet_diagnostic.ma0028.severity = suggestion # MA0028: Optimize StringBuilder usage
dotnet_diagnostic.ma0029.severity = suggestion # MA0029: Optimize LINQ usage
dotnet_diagnostic.ma0030.severity = suggestion # MA0030: Optimize LINQ usage
dotnet_diagnostic.ma0031.severity = suggestion # MA0031: Optimize Enumerable.Count usage
dotnet_diagnostic.ma0032.severity = suggestion # MA0032: Use a cancellation token
dotnet_diagnostic.ma0033.severity = warning # MA0033: Don't tag instance fields with ThreadStaticAttribute
dotnet_diagnostic.ma0035.severity = warning # MA0035: Don't use dangerous threading methods
dotnet_diagnostic.ma0036.severity = suggestion # MA0036: Make class static
dotnet_diagnostic.ma0037.severity = error # MA0037: Remove empty statement
dotnet_diagnostic.ma0038.severity = suggestion # MA0038: Make method static
dotnet_diagnostic.ma0039.severity = error # MA0039: Do not write your own certificate validation method
dotnet_diagnostic.ma0040.severity = suggestion # MA0040: Use a cancellation token
dotnet_diagnostic.ma0041.severity = suggestion # MA0041: Make property static
dotnet_diagnostic.ma0042.severity = suggestion # MA0042: Do not use blocking call
dotnet_diagnostic.ma0043.severity = suggestion # MA0043: Use nameof operator
dotnet_diagnostic.ma0044.severity = suggestion # MA0044: Remove ToString call
dotnet_diagnostic.ma0045.severity = none # MA0045: Do not use blocking call (make method async)
dotnet_diagnostic.ma0046.severity = warning # MA0046: Use EventHandler<T>
dotnet_diagnostic.ma0047.severity = warning # MA0047: Declare types in namespaces
dotnet_diagnostic.ma0048.severity = warning # MA0048: File name must match type name
dotnet_diagnostic.ma0049.severity = error # MA0049: Type name should not match namespace
dotnet_diagnostic.ma0050.severity = suggestion # MA0050: Validate arguments correctly
dotnet_diagnostic.ma0051.severity = none # MA0051: Method is too long
dotnet_diagnostic.ma0052.severity = suggestion # MA0052: Replace with nameof
dotnet_diagnostic.ma0053.severity = suggestion # MA0053: Make class sealed
dotnet_diagnostic.ma0054.severity = warning # MA0054: Embed the caught exception as innerException
dotnet_diagnostic.ma0055.severity = warning # MA0055: Do not use destructor
dotnet_diagnostic.ma0056.severity = warning # MA0056: Do not call overridable members in constructor
dotnet_diagnostic.ma0057.severity = suggestion # MA0057: Class name should end with 'Attribute'
dotnet_diagnostic.ma0058.severity = suggestion # MA0058: Class name should end with 'Exception'
dotnet_diagnostic.ma0059.severity = suggestion # MA0059: Class name should end with 'EventArgs'
dotnet_diagnostic.ma0060.severity = warning # MA0060: The value returned by Stream.Read is not used
dotnet_diagnostic.ma0061.severity = warning # MA0061: Method overrides should not change parameter defaults
dotnet_diagnostic.ma0062.severity = warning # MA0062: Non-flags enums should not be marked with "FlagsAttribute"
dotnet_diagnostic.ma0063.severity = suggestion # MA0063: Optimize Enumerable.OrderBy usage
dotnet_diagnostic.ma0064.severity = warning # MA0064: Avoid locking on publicly accessible instance
dotnet_diagnostic.ma0065.severity = warning # MA0065: Default ValueType.Equals or HashCode is used for struct's equality
dotnet_diagnostic.ma0066.severity = warning # MA0066: Hash table unfriendly type is used in a hash table
dotnet_diagnostic.ma0067.severity = suggestion # MA0067: Use Guid.Empty
dotnet_diagnostic.ma0068.severity = warning # MA0068: Invalid parameter name
dotnet_diagnostic.ma0069.severity = warning # MA0069: Non-constant static fields should not be visible
dotnet_diagnostic.ma0070.severity = warning # MA0070: Obsolete attributes should include explanations
dotnet_diagnostic.ma0071.severity = none # MA0071: Avoid using redundant else
dotnet_diagnostic.ma0072.severity = warning # MA0072: Do not throw from a finally block
dotnet_diagnostic.ma0073.severity = suggestion # MA0073: Avoid comparison with bool constant
dotnet_diagnostic.ma0074.severity = warning # MA0074: Avoid implicit culture-sensitive methods
dotnet_diagnostic.ma0075.severity = suggestion # MA0075: Do not use implicit culture-sensitive ToString
dotnet_diagnostic.ma0076.severity = suggestion # MA0076: Do not use implicit culture-sensitive ToString in interpolated strings
dotnet_diagnostic.ma0077.severity = warning # MA0077: A class that provides Equals(T) should implement IEquatable<T>
dotnet_diagnostic.ma0078.severity = suggestion # MA0078: Use 'Cast' instead of 'Select' to cast
dotnet_diagnostic.ma0079.severity = suggestion # MA0079: Use a cancellation token using .WithCancellation()
dotnet_diagnostic.ma0080.severity = suggestion # MA0080: Use a cancellation token using .WithCancellation()
dotnet_diagnostic.ma0081.severity = warning # MA0081: Method overrides should not omit params keyword
dotnet_diagnostic.ma0082.severity = warning # MA0082: NaN should not be used in comparisons
dotnet_diagnostic.ma0083.severity = warning # MA0083: ConstructorArgument parameters should exist in constructors
dotnet_diagnostic.ma0084.severity = warning # MA0084: Local variable should not hide other symbols
dotnet_diagnostic.ma0085.severity = warning # MA0085: Anonymous delegates should not be used to unsubscribe from Events
dotnet_diagnostic.ma0086.severity = warning # MA0086: Do not throw from a destructor
dotnet_diagnostic.ma0087.severity = warning # MA0087: Parameters with [DefaultParameterValue] attributes should also be marked [Optional]
dotnet_diagnostic.ma0088.severity = warning # MA0088: Use [DefaultParameterValue] instead of [DefaultValue]
dotnet_diagnostic.ma0089.severity = suggestion # MA0089: Optimize string method usage
dotnet_diagnostic.ma0090.severity = suggestion # MA0090: Remove empty block
dotnet_diagnostic.ma0091.severity = warning # MA0091: Sender should be 'this' for instance events
dotnet_diagnostic.ma0092.severity = warning # MA0092: Sender should be 'null' for static events
dotnet_diagnostic.ma0093.severity = warning # MA0093: EventArgs should not be null
dotnet_diagnostic.ma0094.severity = warning # MA0094: A class that provides CompareTo(T) should implement IComparable<T>
dotnet_diagnostic.ma0095.severity = warning # MA0095: A class that implements IEquatable<T> should override Equals(object)
dotnet_diagnostic.ma0096.severity = warning # MA0096: A class that implements IComparable<T> should also implement IEquatable<T>
dotnet_diagnostic.ma0097.severity = warning # MA0097: A class that implements IComparable<T> or IComparable should override comparison operators
dotnet_diagnostic.ma0098.severity = suggestion # MA0098: Use indexer instead of extension methods
dotnet_diagnostic.ma0099.severity = warning # MA0099: Use Explicit enum value instead of 0
ma0053.public_class_should_be_sealed = false


##########################################
# Unnecessary Code Rules
# https://docs.microsoft.com/dotnet/fundamentals/code-analysis/style-rules/unnecessary-code-rules
##########################################

##########################################
# File Extension Settings
##########################################

# Visual Studio Solution Files
[*.sln]
indent_style = tab

# Markdown Files
[*.{md,mdx}]
trim_trailing_whitespace = false

## Custom rules
[**/test/**/*.{cs,vb}]
dotnet_diagnostic.ca1707.severity = none #Identifiers should not contain underscores
dotnet_diagnostic.xunit1004.severity = none #Allow to skip tests
dotnet_diagnostic.xunit1045.severity = none #Disable the xUnit1045 warning for tests files. xUnit1045: Avoid using TheoryData type arguments that might not be serializable

# Verify settings
[*.{received,verified}.{txt,xml,json}]
end_of_line = lf
insert_final_newline = false
trim_trailing_whitespace = false
